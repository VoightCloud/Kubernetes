# You would run this on the Kubernetes Control Plane
# Important: Run this first!

- name: Initialize Kubernetes Control Plane
  hosts: controlplane
  tasks:
    - name: Common Tasks
      include_tasks: all-playbook.yaml

    - name: Initialize the Kubernetes cluster using kubeadm
      become: true
      command: kubeadm init --pod-network-cidr=100.64.0.0/16 --service-cidr=100.65.0.0/16

    - name: Create .kube directory for centos
      file:
        path: /home/centos/.kube
        state: directory
        owner: centos
        group: centos
        mode: '0700'

    - name: Copy kubeconfig
      become: true
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/centos/.kube/config
        remote_src: yes
        owner: centos
        group: centos
        mode: '0700'

    - name: Get Helm
      become: true
      unarchive:
        remote_src: yes
        src: https://get.helm.sh/helm-v3.3.4-linux-arm64.tar.gz
        dest: ~/
      when: ansible_architecture == "x86_64"

    - name: Get Helm
      become: true
      unarchive:
        remote_src: yes
        src: https://get.helm.sh/helm-v3.3.4-linux-arm64.tar.gz
        dest: ~/
      when: ansible_architecture == "aarch64"

    - name: Move Helm package
      command: "{{ item }}"
      become: true
      when: ansible_architecture == "aarch64"
      args:
        warn: false
      with_items:
        - mv ~/linux-arm64/helm /usr/local/bin/helm
        - rm -r ~/linux-arm64/

    - name: Move Helm package
      command: "{{ item }}"
      become: true
      when: ansible_architecture == "x86_64"
      args:
        warn: false
      with_items:
        - mv ~/linux-amd64/helm /usr/local/bin/helm
        - rm -r ~/linux-amd64/

    - name: Install bitnami repos
      community.kubernetes.helm_repository:
        name: bitnami
        repo_url: "https://charts.bitnami.com/bitnami"

    - name: Install stable repos
      community.kubernetes.helm_repository:
        name: stable
        repo_url: "https://kubernetes-charts.storage.googleapis.com"

    - name: Install oteemocharts repos
      community.kubernetes.helm_repository:
        name: oteemocharts
        repo_url: "https://oteemo.github.io/charts"

    - name: Install elastic repos
      community.kubernetes.helm_repository:
        name: elastic
        repo_url: "https://helm.elastic.co"

    - name: Install dashboard repos
      community.kubernetes.helm_repository:
        name: kubernetes-dashboard
        repo_url: "https://kubernetes.github.io/dashboard"

    - name: Install jenkins repos
      community.kubernetes.helm_repository:
        name: jenkins
        repo_url: "https://charts.jenkins.io"

    - name: Install hashicorp repos
      community.kubernetes.helm_repository:
        name: hashicorp
        repo_url: "https://helm.releases.hashicorp.com"

    - name: Install NextCloud repos
      community.kubernetes.helm_repository:
        name: nextcloud
        repo_url: "https://nextcloud.github.io/helm/"

    - name: Install cetic repos
      community.kubernetes.helm_repository:
        name: cetic
        repo_url: "https://cetic.github.io/helm-charts"

    - name: Install haproxy repos
      community.kubernetes.helm_repository:
        name: haproxy
        repo_url: "https://haproxytech.github.io/helm-charts"

    - name: Update helm repos
      command: helm repo update

    - name: Install flannel
      command: "{{ item }}"
      with_items:
        - kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml -f ../flannel-values.yaml
        - kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml

    - name: Install Metal-LB
      command: helm install -n default metallb stable/metallb -f ~/privateKube/metallb-values.yaml

    - name: Install namespaces
      command: kubectl apply -f ../namespaces.yaml

- name: Collect necessary data from control plane
  hosts: controlplane
  become: True
  gather_facts: no
  tasks:
    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Copy join command to local file
      become: false
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- name: Initialize Kubernetes Nodes
  hosts: workers
  become: True
  tasks:
    - name: Common Tasks
      include_tasks: all-playbook.yaml

    - name: Copy the join command to server location
      copy: src=join-command dest=/tmp/join-command.sh mode=0755

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh

    - name: Add www group
      become: true
      group:
        name: www-data
        state: present
        gid: 33

    - name: Add Kubernetes user
      become: true
      user:
        name: kubernetes
        comment: Kubernetes User
        uid: 1050
        groups: docker,www-data
        append: yes

