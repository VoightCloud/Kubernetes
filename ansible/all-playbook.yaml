# This file is meant to be run as a sub-module. Do not run this playbook as standalone.
- name: Update apt sources if aarch64
  become: true
  copy: src=files/pi-sources.list dest=/etc/apt/sources.list
  when: ansible_architecture == "aarch64"

- name: Update apt sources if x86_64
  become: true
  copy: src=files/x86-sources.list dest=/etc/apt/sources.list
  when: ansible_architecture == "x86_64"

- name: Determine if vm
  command: "sh -c \"ip a|grep enp0s8\""
  register: vm_addr
  ignore_errors: true

- name: Remove x86 default route
  command: route del default
  become: true
  when: vm_addr.rc == 0

- name: Update x86 default route
  command: route add default gw 192.168.137.1 enp0s8
  become: true
  when: vm_addr.rc == 0

- name: Install docker.io
  become: true
  apt: name=docker.io update_cache=yes

- name: Enable docker
  become: true
  service: name=docker state=restarted

- name: Install curl
  become: true
  apt: name=curl

- name: Install software properties common
  become: true
  apt: name=software-properties-common

- name: Remove swapfile from /etc/fstab
  become: true
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  become: true
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Update ip forwarding
  become: true
  replace:
    path: /etc/sysctl.conf
    regexp: '^#net.ipv4.ip_forward=1$'
    replace: 'net.ipv4.ip_forward=1'

- name: Update bridge ip6tables
  become: true
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^net.bridge.bridge-nf-call-ip6tables=1'
    insertafter: '^net.ipv4.ip_forward=1$'
    line: 'net.bridge.bridge-nf-call-ip6tables=1'

- name: Update bridge ip4tables
  become: true
  lineinfile:
    path: /etc/sysctl.conf
    regexp: '^net.bridge.bridge-nf-call-iptables=1$'
    insertafter: '^net.bridge.bridge-nf-call-ip6tables=1$'
    line: 'net.bridge.bridge-nf-call-iptables=1'

- name: Add kubernetes key
  become: true
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

- name: Add kubernetes repo
  become: true
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Unmark hold packages for k8s
  command: apt-mark unhold kubelet kubeadm kubectl
  become: true

- name: Install Kubernetes binaries
  become: true
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet=1.21.5-00
      - kubeadm=1.21.5-00
      - kubectl=1.21.5-00
      - net-tools
      - nfs-common
      - open-iscsi

- name: Don't allow k8s upgrades
  command: apt-mark hold kubelet kubeadm kubectl
  become: true

- name: Gather local network address
  command: "sh -c \"ip a|grep 192.168|cut -f6 -d' '|cut -f1 -d'/'\""
  register: local_addr

- name: Copy CA certificate
  copy:
    src: files/voight-ca.crt
    dest: /usr/local/share/ca-certificates/
  become: true

- name: Install CA certificate
  command: update-ca-certificates
  become: true

- name: Set docker cgroup
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "registry-mirrors" : ["https://nexus.voight.org:9043"],
        "experimental" : true
      }
  become: true

- name: Kubelet Extra Args
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: "node-ip="
    line: 'Environment="KUBELET_EXTRA_ARGS=--node-ip={{ local_addr.stdout}}"'
    insertafter: "Environment="
  become: true

- name: Restart kubelet
  become: true
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted
